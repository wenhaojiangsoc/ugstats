View(gss)
getwd()
gss[which(gss$rincome==13),"rincome"]<-50000
write.csv(gss,"GSS_SOCUA_W8.csv")
model1 <- lm(relig~educ,gss)
model2 <- lm(relig~educ+sex,gss)
stargazer(model1,model2, out = "text",
header=FALSE,
title = "The association between education, sex and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
library(stargazer)
model1 <- lm(relig~educ,gss)
stargazer(model1, type = "text",
header=FALSE,
title = "The association between education and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
library(stargazer)
model1 <- lm(relig~educ,gss)
stargazer(model1, type = "text",
header=FALSE,
title = "The association between education and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
gss$rincome <- gss$rincome + 100*gss$educ*gss$sex
model1 <- lm(rincome~educ,gss)
model2 <- lm(rincome~educ+sex,gss)
model3 <- lm(rincome~educ+sex+educ*sex,gss)
stargazer(model1,model2,model3, type = "text",
header=FALSE,
title = "The association between education, sex and income",
digits = 1,
omit.stat = c("rsq","f","ser"))
write.csv(gss,"GSS_SOCUA_W11.csv")
library(arm)
model4 <- lm(rincome~educ+sex+factor(marital),gss)
library(arm)
model4 <- lm(relig~educ+sex+factor(marital),gss)
stargazer(model4, out = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 1,
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 1,
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
model4 <- lm(relig~educ+factor(marital),gss)
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
coefplot(model4)
model4 <- lm(relig~educ+sex+factor(marital),gss)
coefplot(model4)
model4 <- lm(rincome~educ+sex+factor(marital),gss)
coefplot(model4)
model4 <- lm(relig~educ+sex+factor(marital),gss)
coefplot(model4)
coefplot(model4,CI=1)
coefplot(model4)
coefplot(model4,
col.pts="darkred")
coefplot(model4,
col.pts="darkred",
pch.pts=8)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
var.las=1, main="Regression Estimates")
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion")
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
xlim=c(-0.8, 0.8))
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("x","y"))
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("x","y","intercept","z","q","s","k"))
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion")
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed","divorced","separated","never married"))
stargazer(model4, out = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed","divorced","separated","never married"),
cex.var=0.5)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed","divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6,
cex.axis=0.2)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6,
cex.pts=0.2,
cex.sub=0.2)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6,
cex.axis=0.01)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6,
cex=0.01)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."),
cex.var=0.5,
cex.main=0.6)
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."))
coefplot(model4,
col.pts="darkred",
pch.pts=8,
main="The association between education, sex, marital status and religion",
varnames=c("intercept","education","women","widowed",
"divorced","separated","never mar."))
??plot_summs
library(jtools)
plot_summs(model4)
install.packages("ggstance")
install.packages("ggstance")
library(jtools)
plot_summs(model4)
library(ggstance)
plot_coefs(model4)
install.packages("ggstance")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(jtools)
plot_summs(model4)
install.packages("broom.mixed")
plot_summs(model4,
colors="darkred")
plot_summs(model4,
colors="darkred",
coefs = c("Frost Days" = "Frost", "% Illiterate" = "Illiteracy",
"Murder Rate" = "Murder"))
plot_summs(model4,
colors="darkred")
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "Sex",
"" = "", "" = "", "" = "", "" = ""))
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "Sex"))
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "sex"))
plot_summs(model4,
colors="darkred")
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "sex",
"widowed" = "factor(marital)2"))
plot_summs(model4,
colors="darkred",
coefs = c("Education","Women" = "sex",
"widowed" = "factor(marital)2",
"divorced" = "", "" = "", "" = ""))
plot_summs(model4,
colors="darkred",
coefs = c("education","women","widowed",
"divorced","separated","never mar."))
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "sex",
"Widowed" = "factor(marital)2",
"Divorced" = "factor(marital)3",
"Separated" = "factor(marital)4",
"Never married" = "factor(marital)5"))
plot_summs(model4,
colors="darkred",
coefs = c("Education" = "educ", "Women" = "sex",
"Widowed" = "factor(marital)2",
"Divorced" = "factor(marital)3",
"Separated" = "factor(marital)4",
"Never married" = "factor(marital)5"))
model4 <- lm(relig~educ+sex+factor(marital),gss)
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
library(stargazer)
model4 <- lm(relig~educ+sex+factor(marital),gss)
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
covariate.labels = c("1","2","#","4","5","6","7")
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
covariate.labels = c("1","2","#","4","5","6","7"),
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
covariate.labels = c("Education","Women","Widowed","Divorced","Separated","Never married","Intercept"),
dep.var.caption = "Religious Belief",
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
covariate.labels = c("Education","Women","Widowed","Divorced","Separated","Never married","Intercept"),
dep.var.labels =  = "Religious Belief",
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion",
digits = 3,
single.row = T,
covariate.labels = c("Education","Women","Widowed","Divorced","Separated","Never married","Intercept"),
dep.var.labels  = "Religious Belief",
omit.stat = c("rsq","f","ser"))
stargazer(model4, type = "text",
header=FALSE,
title = "The association between education, sex, marital status and religion, GSS2021",
digits = 3,
single.row = T,
covariate.labels = c("Education","Women","Widowed","Divorced","Separated","Never married","Intercept"),
dep.var.labels  = "Religious Belief",
omit.stat = c("rsq","f","ser"))
## set your working directory - you should set your own unique one!
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
## read csv data - this is 2021 GSS data
gss <- read.csv("GSS_SOCUA_W11.csv")
## set your working directory - you should set your own unique one!
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
## read csv data - this is 2021 GSS data
gss <- read.csv("GSS_SOCUA_W11.csv")
gss$sex <- gss$sex-1
write.csv(gss,"GSS_SOCUA_W11.csv")
## set your working directory - you should set your own unique one!
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
## read csv data - this is 2021 GSS data
gss <- read.csv("GSS_SOCUA_W11.csv")
View(gss)
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
## read csv data - this is 2021 GSS data
gss <- read.csv("GSS_SOCUA_W11.csv")
head(gss)
library(dplyr)
gss <- gss %>%
mutate(relig=ifelse(relig==4,0,1)) ## create new relig to be 0 if
head(gss)
## import function
source("http://pcwww.liv.ac.uk/~william/R/crosstab.r")
gss %>%
mutate(relig=ifelse(relig==4,0,1)) ## create new relig to be 0 if
crosstab(gss, row.vars = "sex",
col.vars = "relig",
type = "f") ## "f" represents frequency
## regression model
model1 <- lm(relig~educ,gss)
summary(model1)
stargazer(model1)
stargazer(model1,
type = "text")
stargazer(model1, type = "text",
header=FALSE,
title = "The association between education and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
setwd("~/Dropbox/Teaching/SOCUA-302/Week 11")
## read csv data - this is 2021 GSS data
gss <- read.csv("GSS_SOCUA_W11.csv")
head(gss)
library(dplyr)
gss <- gss %>%
mutate(relig=ifelse(relig==4,0,1))
head(gss)
## cross table
source("http://pcwww.liv.ac.uk/~william/R/crosstab.r")
## model 1
model1 <- lm(relig~educ,gss)
model1 <- lm(relig~educ,gss)
summary(model1)
library(stargazer)
stargazer(model1,type="text")
stargazer(model1, type = "text",
header=FALSE,
title = "The association between education and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
model1 <- lm(relig~educ,gss)
model2 <- lm(relig~educ+sex,gss)
stargazer(model1,model2, type = "text",
header=FALSE,
title = "The association between education, sex and religious belief",
digits = 3,
omit.stat = c("rsq","f","ser"))
#require(devtools)
#install_version("tidymodels", version = "1.0.0", repos = "http://cran.us.r-project.org")
#install.packages("installr")
#library(installr)
#updateR()
pacman::p_load(tidyverse,tidytext,tidymodels)
horror_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-01/horror_movies.csv')
#Looks like there are a lot of 0s, which are most likely missing. Let’s get rid of those.
horror_r <-
horror_movies %>%
filter(vote_average > 0,
!is.na(overview))
#Okay, this leaves us with 20463. Let’s check the distribution again.
horror_r %>%
ggplot(aes(x = vote_average)) +
geom_histogram() +
theme_minimal()
#Let’s create a binary outcome for classification purposes. We’ll put the cutoff
horror_r <-
horror_r %>%
mutate(good = if_else(vote_average >=5, 1, 0),
good = factor(good, levels = c(0,1), labels = c("Good movie","Bad movie")))
horror_r %>%
count(good) %>%
ggplot(aes(x = good, y = n)) +
geom_col() +
scale_y_continuous() +
theme_minimal()
#check the distribution of popularity
horror_movies %>%
ggplot(aes(x = popularity)) +
geom_histogram() +
theme_minimal()
horror_movies<-horror_movies %>%
mutate(ln_popularity=log(popularity+1))
#see the relationship between ln_popularity and vote_average
horror_movies %>%
ggplot(aes(x=ln_popularity, y=vote_average)) + geom_point()
horror_movies<-horror_movies %>%
mutate(ln_vote_count=log(vote_count+1))
horror_movies<-horror_movies %>%
separate(release_date, c("Year", "Month", "Day"))
count(horror_movies, Year)
set.seed(1234)
horror_split <- horror_r %>%
initial_split()
？？initial_split
??initial_split
library(rsample)
library(rsample)
set.seed(1234)
horror_split <- horror_r %>%
initial_split()
horror_train <- training(horror_split)
horror_test <- testing(horror_split)
horror_train
pacman::p_load(textrecipes) # this library includes text-specific recipes not included in the base recipes package.
# We define the recipe with "steps."
horror_rec <-
recipe(good ~ overview+ln_popularity+ln_vote_count+s(Year), data = horror_train) %>% # we define the model
step_tokenize(overview) %>% # tokenize the text
step_stopwords(overview) %>% #remove stopwords
step_tokenfilter(overview, max_tokens = 1000) %>% # selecting only the top 1000 most frequently occuring tokens
step_tfidf(overview) %>% # adding tfidf weights
step_normalize(all_predictors()) # normalizing the tf-idf weights -- machine learning models typically require normalized predictors
??step_normalize
pacman::p_load(textrecipes) # this library includes text-specific recipes not included in the base recipes package.
# We define the recipe with "steps."
horror_rec <-
recipe(good ~ overview+ln_popularity+ln_vote_count+s(Year), data = horror_train) %>% # we define the model
step_tokenize(overview) %>% # tokenize the text
step_stopwords(overview) %>% #remove stopwords
step_tokenfilter(overview, max_tokens = 1000) %>% # selecting only the top 1000 most frequently occuring tokens
step_tfidf(overview) %>% # adding tfidf weights
step_normalize(all_predictors()) # normalizing the tf-idf weights -- machine learning models typically require normalized predictors
library("recipes")
install.packages("tidyselect")
install.packages("tidyselect")
install.packages("tidyselect")
install.packages("tidyselect")
install.packages("tidyselect")
horror_rec <-
recipe(good ~ overview+ln_popularity+ln_vote_count+s(Year), data = horror_train) %>% # we define the model
step_tokenize(overview) %>% # tokenize the text
step_stopwords(overview) %>% #remove stopwords
step_tokenfilter(overview, max_tokens = 1000) %>% # selecting only the top 1000 most frequently occuring tokens
step_tfidf(overview) %>% # adding tfidf weights
step_normalize(all_predictors()) # normalizing the tf-idf weights -- machine learning models typically require normalized predictors
#require(devtools)
#install_version("tidymodels", version = "1.0.0", repos = "http://cran.us.r-project.org")
#install.packages("installr")
#library(installr)
#updateR()
pacman::p_load(tidyverse,tidytext,tidymodels,recipes,rsample)
horror_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-01/horror_movies.csv')
set.seed(1234)
horror_split <- horror_r %>%
initial_split()
horror_train <- training(horror_split)
horror_test <- testing(horror_split)
horror_train
pacman::p_load(textrecipes) # this library includes text-specific recipes not included in the base recipes package.
# We define the recipe with "steps."
horror_rec <-
recipe(good ~ overview+ln_popularity+ln_vote_count+s(Year), data = horror_train) %>% # we define the model
step_tokenize(overview) %>% # tokenize the text
step_stopwords(overview) %>% #remove stopwords
step_tokenfilter(overview, max_tokens = 1000) %>% # selecting only the top 1000 most frequently occuring tokens
step_tfidf(overview) %>% # adding tfidf weights
step_normalize(all_predictors()) # normalizing the tf-idf weights -- machine learning models typically require normalized predictors
horror_rec <-
recipe(good ~ overview+ln_popularity+ln_vote_count+Year, data = horror_train) %>% # we define the model
step_tokenize(overview) %>% # tokenize the text
step_stopwords(overview) %>% #remove stopwords
step_tokenfilter(overview, max_tokens = 1000) %>% # selecting only the top 1000 most frequently occuring tokens
step_tfidf(overview) %>% # adding tfidf weights
step_normalize(all_predictors()) # normalizing the tf-idf weights -- machine learning models typically require normalized predictors
colnames(horror_train)
