c(1:65,67:81)
## empty df to store WMD in each year
wmd_sim <-
data.frame(year=1994:2021)
for (i in 1994:2021){
## create Occupation-Location Matrix in each year
olm <-
olm <- with(five_rd(cps,i), questionr::wtd.table(occ1990, metarea, weights=wtfinl)) %>% prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## Occ-Loc Matrix is centered and scaled by default
## SVD decomposition and a vector representation of occupations (4 dimensions)
svd <- svd(olm,nu=4)
occvec <- svd$u %*% diag(svd$d)[1:4,1:4]
## create 9-cat GW meso identifier and occupation weight
occvec <- t(apply(occvec,1,l2.norm))
occvec <- as.data.frame(occvec)
occvec$occ1990 <- rownames(olm)
occvec <- merge(occvec,occgw[which(occgw$gw_micro!=66),c("occ1990","gw_micro")],by="occ1990",all.x=T)
occvec <- merge(occvec,Nocc[which(Nocc$year %in% five_mw(i)),]
%>% group_by(occ1990) %>%
summarize(Nocc=sum(Nocc,na.rm=T)),
by="occ1990",all.x=T)
occvec <- occvec[,-which(names(occvec) %in% c("occ1990"))]
## Calculate WMD
### rescale WMD by the mean WMD between all possible class pairs
wmdlist <- c()
for (k in c(1:65,67:81)){
for (m in c(1:65,67:81)){
if (k!=m){
wmdlist <- append(wmdlist,
emd(
as.matrix(occvec[which(occvec$gw_micro==k),c(6,1:4)]),
as.matrix(occvec[which(occvec$gw_micro==m),c(6,1:4)])
))
} else {}
}
}
## calculate WMD for all possible combinations of classes
for (f in c(1:65,67:81)){
for (s in c(1:65,67:81)){
wmdsim <- (emd(
as.matrix(occvec[which(occvec$gw_micro==f),c(6,1:4)]),
as.matrix(occvec[which(occvec$gw_micro==s),c(6,1:4)])
) - mean(wmdlist))/sd(wmdlist) ## center and scale
wmd_sim[which(wmd_sim$year==i),1+(f-1)*80+s] <- wmdsim
}
}
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
View(wmd_sim)
View(wmdlist_year)
View(wmd_sim)
c(1:65,67:81)[1]
## empty df to store WMD in each year
wmd_sim <-
data.frame(year=1994:2021)
for (i in 1994:2021){
## create Occupation-Location Matrix in each year
olm <-
olm <- with(five_rd(cps,i), questionr::wtd.table(occ1990, metarea, weights=wtfinl)) %>% prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## Occ-Loc Matrix is centered and scaled by default
## SVD decomposition and a vector representation of occupations (4 dimensions)
svd <- svd(olm,nu=4)
occvec <- svd$u %*% diag(svd$d)[1:4,1:4]
## create 9-cat GW meso identifier and occupation weight
occvec <- t(apply(occvec,1,l2.norm))
occvec <- as.data.frame(occvec)
occvec$occ1990 <- rownames(olm)
occvec <- merge(occvec,occgw[which(occgw$gw_micro!=66),c("occ1990","gw_micro")],by="occ1990",all.x=T)
occvec <- merge(occvec,Nocc[which(Nocc$year %in% five_mw(i)),]
%>% group_by(occ1990) %>%
summarize(Nocc=sum(Nocc,na.rm=T)),
by="occ1990",all.x=T)
occvec <- occvec[,-which(names(occvec) %in% c("occ1990"))]
## Calculate WMD
### rescale WMD by the mean WMD between all possible class pairs
wmdlist <- c()
for (k in c(1:65,67:81)){
for (m in c(1:65,67:81)){
if (k!=m){
wmdlist <- append(wmdlist,
emd(
as.matrix(occvec[which(occvec$gw_micro==k),c(6,1:4)]),
as.matrix(occvec[which(occvec$gw_micro==m),c(6,1:4)])
))
} else {}
}
}
## calculate WMD for all possible combinations of classes
for (f in 1:80){
fi <- c(1:65,67:81)[f]
for (s in 1:80){
si <- c(1:65,67:81)[s]
wmdsim <- (emd(
as.matrix(occvec[which(occvec$gw_micro==fi),c(6,1:4)]),
as.matrix(occvec[which(occvec$gw_micro==si),c(6,1:4)])
) - mean(wmdlist))/sd(wmdlist) ## center and scale
wmd_sim[which(wmd_sim$year==i),1+(f-1)*80+s] <- wmdsim
}
}
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
View(wmd_sim)
## change matrix from 1994 to 2021
for (i in 2:6401){
wmd_sim[,i]=three_ma(wmd_sim[,i])
}
change <-
matrix(as.numeric(wmd_sim[which(wmd_sim$year==2021),2:6401]),nrow = 80,ncol = 80) -
matrix(as.numeric(wmd_sim[which(wmd_sim$year==1994),2:6401]),nrow = 80,ncol = 80)
change <- reshape2::melt(change)
ggplot(data = change, aes(x=Var1, y=Var2, fill=value)) +
scale_y_reverse() +
geom_tile(color = "white") +
scale_fill_gradient2(low = "darkblue", high = "darkred", mid = "white",
midpoint = 0,
name="WMD Change") +
xlab("GW Micro-class") +
ylab("GW Micro-class") +
theme_classic() +
theme(plot.title = element_text(size=6),
axis.text.x=element_text(size=6),
axis.text.y=element_text(size=6),
legend.position = "bottom")
## smooth data and patterns
resolution <- 0.3
a <- interp(x=change$Var1, y=change$Var2, z=change$value,
xo=seq(min(change$Var1),max(change$Var1),by=resolution),
yo=seq(min(change$Var2),max(change$Var2),by=resolution), duplicate="mean")
res <- a$z %>%
magrittr::set_colnames(a$y) %>%
as_tibble() %>%
mutate(x=a$x) %>%
gather(y, z, -x, convert=TRUE)
ggplot(data = res, aes(x=x, y=y, fill=z)) +
scale_y_reverse() +
geom_tile(color = "white") +
scale_fill_gradient2(low = "darkblue", high = "darkred", mid = "white",
midpoint = 0,
name="Cosine Similarity Change") +
xlab("GW Micro-class") +
ylab("GW Micro-class") +
theme_classic() +
theme(plot.title = element_text(size=6),
axis.text.x=element_text(size=6),
axis.text.y=element_text(size=6),
legend.position = "bottom")
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1999:2021)
## rename EGP scale
occegp[which(occegp$egp %in% c("IIIa","IIIb")),"egp"] <- "III"
occegp[which(occegp$egp %in% c("VIIa","VIIb")),"egp"] <- "VII"
for (i in 1999:2021){
## create occupation vector
occvec <-
create_occvec(data=oews,
nu=200,
crosswalk=occegp,
cps=F)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=6)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=6)
ggarrange(plotlist=plots,ncol=6,nrow=6)
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1994:2021)
## recode DA
occda[which(occda$da=="managers/executives"),"da"] <- "1"
occda[which(occda$da=="professionals"),"da"] <- "2"
occda[which(occda$da=="technicians"),"da"] <- "3"
occda[which(occda$da=="sales"),"da"] <- "4"
occda[which(occda$da=="administrative/office"),"da"] <- "5"
occda[which(occda$da=="production"),"da"] <- "6"
occda[which(occda$da=="laborers"),"da"] <- "7"
head(occda)
for (i in 1994:2021){
## create occupation vector
occvec <-
create_occvec(data=oews,
nu=200,
crosswalk=occda,
cps=F)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
for (i in 1999:2021){
## create occupation vector
occvec <-
create_occvec(data=oews,
nu=200,
crosswalk=occda,
cps=F)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=9)
ggarrange(plotlist=plots,ncol=9,nrow=9)
View(cos_sim)
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1999:2021)
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1999:2021)
for (i in 1999:2021){
## create occupation vector
occvec <-
create_occvec(data=oews,
nu=200,
crosswalk=occda,
cps=F)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=9)
ggarrange(plotlist=plots,ncol=9,nrow=9)
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1999:2021)
for (i in 1999:2021){
## create occupation vector
occvec <-
create_occvec(data=oews,
nu=200,
crosswalk=occgw[,c("occ1990","gw_meso")],
cps=F)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=9)
ggarrange(plotlist=plots,ncol=9,nrow=9)
## empty df to store WMD in each year
wmd_sim <-
data.frame(year=1999:2021)
## rename EGP scale
occegp[which(occegp$egp %in% c("IIIa","IIIb")),"egp"] <- "III"
occegp[which(occegp$egp %in% c("VIIa","VIIb")),"egp"] <- "VII"
head(oews)
for (i in 1999:2021){
## create Occupation-Location Matrix in each year
olm <-
olm <- with(five_rd(oews,i), questionr::wtd.table(occ1990, metarea, weights=tot_emp)) %>% prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## Occ-Loc Matrix is centered and scaled by default
## SVD decomposition and a vector representation of occupations (4 dimensions)
svd <- svd(olm,nu=4)
occvec <- svd$u %*% diag(svd$d)[1:4,1:4]
## create 6-cat EGP identifier and occupation weight
occvec <- t(apply(occvec,1,l2.norm))
occvec <- as.data.frame(occvec)
occvec$occ1990 <- rownames(olm)
occvec <- merge(occvec,occegp[,c("occ1990","egp")],by="occ1990",all.x=T)
occvec <- merge(occvec,Nocc[which(Nocc$year %in% five_mw(i)),] %>%
group_by(occ1990) %>%
summarize(Nocc=sum(Nocc,na.rm=T)),
by="occ1990",all.x=T)
occvec <- occvec[,-which(names(occvec) %in% c("occ1990"))]
## Calculate WMD
### rescale WMD by the mean WMD between all possible class pairs
wmdlist <- c()
egp <- c("I","II","III","V","VI","VII")
for (k in 1:6){
for (m in 1:6){
if (k!=m){
wmdlist <- append(wmdlist,
emd(
as.matrix(occvec[which(occvec$egp==egp[k]),c(6,1:4)]),
as.matrix(occvec[which(occvec$egp==egp[m]),c(6,1:4)])
))
} else {}
}
}
## calculate WMD for all possible combinations of classes
for (f in 1:6){
for (s in 1:6){
wmdsim <- (emd(
as.matrix(occvec[which(occvec$egp==egp[f]),c(6,1:4)]),
as.matrix(occvec[which(occvec$egp==egp[s]),c(6,1:4)])
) - mean(wmdlist))/sd(wmdlist) ## center and scale
wmd_sim[which(wmd_sim$year==i),1+(f-1)*6+s] <- wmdsim
}
}
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## create Occupation-Location Matrix in each year
olm <-
olm <- with(five_rd(oews,i), questionr::wtd.table(occ1990, metarea, weights=tot_emp)) %>% prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## Occ-Loc Matrix is centered and scaled by default
## SVD decomposition and a vector representation of occupations (4 dimensions)
svd <- svd(olm,nu=4)
occvec <- svd$u %*% diag(svd$d)[1:4,1:4]
## create 6-cat EGP identifier and occupation weight
occvec <- t(apply(occvec,1,l2.norm))
occvec <- as.data.frame(occvec)
occvec$occ1990 <- rownames(olm)
occvec <- merge(occvec,occegp[,c("occ1990","egp")],by="occ1990",all.x=T)
head(occvec)
occvec <- merge(occvec,Nocc[which(Nocc$year %in% five_mw(i)),] %>%
group_by(occ1990) %>%
summarize(Nocc=sum(Nocc,na.rm=T)),
by="occ1990",all.x=T)
head(occvec)
occvec <- occvec[,-which(names(occvec) %in% c("occ1990"))]
## Calculate WMD
### rescale WMD by the mean WMD between all possible class pairs
wmdlist <- c()
egp <- c("I","II","III","V","VI","VII")
head(occvec)
as.matrix(occvec[which(occvec$egp==egp[k]),c(6,1:4)])
as.matrix(occvec[which(occvec$egp==egp[m]),c(6,1:4)])
olm <- with(five_rd(cps,1994), questionr::wtd.table(occ1990, metarea, weights=wtfinl)) %>% prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## occ-loc matrix is centered and scaled by default
## calculate the vector representation of occupations and metroareas - the first 2 singular values
svd <- svd(olm,nu=2,nv=2)
occvec <- svd$u %*% diag(svd$d)[1:2,1:2]
metvec <- diag(svd$d)[1:2,1:2] %*% t(svd$v)
## plot occupation vectors in 2-D panel and color by group
occvec <- as.data.frame(t(apply(occvec,1,l2.norm)))
occvec$occ1990 <- rownames(olm)
occvec$occ1990 <- as.integer(occvec$occ1990)
occvec <- merge(occvec,occgw,by="occ1990",all.x=TRUE)
## plot - macro
occvec <- merge(occvec,cps %>% group_by(occ1990) %>%
summarize(Nocc=sum(wtfinl,na.rm=T)),by="occ1990",all.x=T)
centroid <-
occvec %>% group_by(gw_macro) %>%
summarize(V1 = weighted.mean(V1,Nocc),
V2 = weighted.mean(V2,Nocc))
centroid <- cbind(as.data.frame(t(apply(centroid[,2:3],1,l2.norm))),gw_macro=c(1,2,3,4))
ggplot(occvec,aes(x=V1,y=V2,color=factor(gw_macro),group=factor(gw_macro))) +
geom_point(size=1,shape=3) +
theme_classic() +
xlab("Dimension 1") +
ylab("Dimension 2") +
scale_colour_manual(values = c("darkorange", "darkgreen", "blueviolet", "blue"),
name = "Macroclass (Grusky-Weeden)") +
geom_segment(data=centroid,
aes(x=0, y=0, xend=V1, yend=V2),
arrow = arrow(length = unit(0.1, "cm")),
show.legend = F) +
theme(text=element_text(family="Times"),
legend.position = "bottom")
ggplot(occvec,aes(x=V1,y=V2,color=factor(gw_macro),group=factor(gw_macro))) +
geom_point(size=1,shape=3) +
theme_classic() +
xlab("Dimension 1") +
ylab("Dimension 2") +
scale_colour_manual(values = c("darkorange", "darkgreen", "blueviolet", "blue"),
name = "Macroclass (Grusky-Weeden)") +
geom_segment(data=centroid,
aes(x=0, y=0, xend=V1, yend=V2),
arrow = arrow(length = unit(0.1, "cm")),
show.legend = F) +
theme(legend.position = "bottom")
## plot - meso
centroid <-
occvec %>% group_by(gw_meso) %>%
summarize(V1 = weighted.mean(V1,Nocc),
V2 = weighted.mean(V2,Nocc))
centroid <- cbind(as.data.frame(t(apply(centroid[,2:3],1,l2.norm))),gw_meso=c(1,2,3,4,5,6,7,8,9))
ggplot(occvec,aes(x=V1,y=V2,color=factor(gw_meso),group=factor(gw_meso))) +
geom_point(size=1,shape=8) +
theme_bw() +
xlab("Dimension 1") +
ylab("Dimension 2") +
scale_colour_manual(values = c("darkorange", "darkgreen", "blueviolet", "blue",
"orange4","grey","black","lightblue","brown"),
name = "Mesoclass (Grusky-Weeden)") +
geom_segment(data=centroid,
aes(x=0, y=0, xend=V1, yend=V2),
arrow = arrow(length = unit(0.1, "cm")),
show.legend = F) +
theme(text=element_text(family="Times"),
legend.position = "bottom")
ggplot(occvec,aes(x=V1,y=V2,color=factor(gw_meso),group=factor(gw_meso))) +
geom_point(size=1,shape=8) +
theme_bw() +
xlab("Dimension 1") +
ylab("Dimension 2") +
scale_colour_manual(values = c("darkorange", "darkgreen", "blueviolet", "blue",
"orange4","grey","black","lightblue","brown"),
name = "Mesoclass (Grusky-Weeden)") +
geom_segment(data=centroid,
aes(x=0, y=0, xend=V1, yend=V2),
arrow = arrow(length = unit(0.1, "cm")),
show.legend = F) +
theme(legend.position = "bottom")
## cosine similarity between occupation vector pairs for each year
cosine_similarity <- function(data=occvec,
category=6){
## rescale cosine similarity by the mean cosine similarity between all possible class pairs
coslist <- c()
for (k in 1:category){
for (m in 1:category){
if (k!=m){
coslist <- append(coslist,cosine(occvec[k,],occvec[m,])[1,1])
} else {}
}
}
## calculate cosine similarity for all possible combinations of classes
for (f in 1:category){
for (s in 1:category){
#cossim <- (cosine(occvec[f,],occvec[s,])[1,1] - mean(coslist))/sd(coslist) ## center and scale
cossim <- (cosine(occvec[f,],occvec[s,])[1,1]
cos_sim[which(cos_sim$year==i),1+(f-1)*category+s] <<- cossim
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1994:2021)
for (i in 1994:2021){
## create occupation vector
occvec <-
create_occvec(data=cps,
nu=200,
crosswalk=occgw[,c("occ1990","gw_meso")],
cps=T)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=9)
ggarrange(plotlist=plots,ncol=9,nrow=9)
View(cos_sim)
## cosine similarity between occupation vector pairs for each year
cosine_similarity <- function(data=occvec,
category=6){
## calculate cosine similarity for all possible combinations of classes
for (f in 1:category){
for (s in 1:category){
#cossim <- (cosine(occvec[f,],occvec[s,])[1,1] - mean(coslist))/sd(coslist) ## center and scale
cossim <- (cosine(occvec[f,],occvec[s,])[1,1]
cos_sim[which(cos_sim$year==i),1+(f-1)*category+s] <<- cossim
## cosine similarity between occupation vector pairs for each year
cosine_similarity <- function(data=occvec,
category=6){
## calculate cosine similarity for all possible combinations of classes
for (f in 1:category){
for (s in 1:category){
#cossim <- (cosine(occvec[f,],occvec[s,])[1,1] - mean(coslist))/sd(coslist) ## center and scale
cossim <- (cosine(occvec[f,],occvec[s,])[1,1]
cos_sim[which(cos_sim$year==i),1+(f-1)*category+s] <<- cossim
## cosine similarity between occupation vector pairs for each year
cosine_similarity <- function(data=occvec,
category=6){
## calculate cosine similarity for all possible combinations of classes
for (f in 1:category){
for (s in 1:category){
#cossim <- (cosine(occvec[f,],occvec[s,])[1,1] - mean(coslist))/sd(coslist) ## center and scale
cossim <- cosine(occvec[f,],occvec[s,])[1,1]
cos_sim[which(cos_sim$year==i),1+(f-1)*category+s] <<- cossim
}
}
}
## empty df to store cosine similarity in each year
cos_sim <-
data.frame(year=1994:2021)
for (i in 1994:2021){
## create occupation vector
occvec <-
create_occvec(data=cps,
nu=200,
crosswalk=occgw[,c("occ1990","gw_meso")],
cps=T)
## calculate centroid and weighted by individual counts
occvec <- occvec_centroid(data = occvec)
## calculate cosine similarity
cosine_similarity(occvec,category=9)
## monitor progress
print(paste("year", as.character(i), "is done!"))
}
## plot
plot_class_trend(cos_sim,category=9)
ggarrange(plotlist=plots,ncol=9,nrow=9)
olm <- with(five_rd(cps,i), questionr::wtd.table(occ1990, metarea, wtfinl)) %>%
prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE)
olm
olm <- with(five_rd(oews,i), questionr::wtd.table(occ1990, metarea, tot_emp)) %>%
prop.table(margin=2)
olm <- scale(olm,center=TRUE,scale=TRUE) ## Occ-Loc Matri
olm
unique(oews$metarea)
